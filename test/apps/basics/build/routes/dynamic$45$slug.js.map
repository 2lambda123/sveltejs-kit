{"version":3,"file":"dynamic$45$slug.js","sources":["../../../unoptimized/server/_app/main/runtime/stores.js","../../../unoptimized/server/_app/routes/dynamic-[slug].js"],"sourcesContent":["import __SNOWPACK_ENV__ from '../../../__snowpack__/env.js';\nimport.meta.env = __SNOWPACK_ENV__;\n\nimport { getContext } from '../../../web_modules/svelte.js';\n\n// const ssr = (import.meta as any).env.SSR;\nconst ssr = typeof window === 'undefined'; // TODO why doesn't previous line work in build?\n\nconst getStores = () => getContext('__svelte__');\n\nconst page = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().page;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\nconst preloading = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().preloading;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\nconst error = (verb) => {\n\tthrow new Error(\n\t\tssr\n\t\t\t? `Can only ${verb} session store in browser`\n\t\t\t: `Cannot ${verb} session store before subscribing`\n\t);\n};\n\nconst session = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().session;\n\n\t\tif (!ssr) {\n\t\t\tsession.set = store.set;\n\t\t\tsession.update = store.update;\n\t\t}\n\n\t\treturn store.subscribe(fn);\n\t},\n\tset: (value) => {\n\t\terror('set');\n\t},\n\tupdate: (updater) => {\n\t\terror('update');\n\t}\n};\n\nexport { getStores, page, preloading, session };\n//# sourceMappingURL=stores.js.map\n","/* src/routes/dynamic-[slug].svelte generated by Svelte v3.29.0 */\nimport { create_ssr_component, escape, get_store_value } from \"../../web_modules/svelte/internal.js\";\n\nimport { page } from \"../main/runtime/stores.js\";\n\nconst Dynamic_u5Bslugu5D = create_ssr_component(($$result, $$props, $$bindings, slots) => {\n\tlet $page = get_store_value(page);\n\treturn `<h1>Slug: ${escape($page.params.slug)}</h1>`;\n});\n\nexport default Dynamic_u5Bslugu5D;\n//# sourceMappingURL=dynamic-[slug].js.map\n"],"names":["page","subscribe","fn","getContext","Dynamic_u5Bslugu5D","create_ssr_component","$$result","$$props","$$bindings","slots","$page","get_store_value","escape","params","slug"],"mappings":"iHAQA,MAEMA,EAAO,CACZC,UAAUC,GAHaC,aAAW,cAIPH,KACbC,UAAUC,ICRnBE,EAAqBC,wBAAqB,CAACC,EAAUC,EAASC,EAAYC,KAC/E,IAAIC,EAAQC,kBAAgBX,GAC5B,MAAO,aAAaY,SAAOF,EAAMG,OAAOC"}