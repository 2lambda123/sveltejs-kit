import fs, { stat } from 'fs';
import ts from 'typescript';

const code = fs.readFileSync('types/index.d.ts', 'utf-8');
const node = ts.createSourceFile('index.d.ts', code, ts.ScriptTarget.Latest);

const types = [];

for (const statement of node.statements) {
	if (
		ts.isClassDeclaration(statement) ||
		ts.isInterfaceDeclaration(statement) ||
		ts.isTypeAliasDeclaration(statement) ||
		ts.isModuleDeclaration(statement)
	) {
		// @ts-ignore no idea why it's complaining here
		const name = statement.name?.escapedText;

		let start = statement.pos;
		let comment = '';

		if (statement.jsDoc) {
			comment = statement.jsDoc[0].comment;
			start = statement.jsDoc[0].end;
		}

		const i = code.indexOf('export', start);
		start = i + 6;

		const snippet = code.slice(start, statement.end).trim();

		types.push({ name, comment, snippet });
	}
}

// should already be sorted, but just in case
types.sort((a, b) => (a.name < b.name ? -1 : 1));

fs.writeFileSync(
	'../../documentation/types.js',
	`
/* This file is generated by running \`node scripts/extract-types.js\`
   in the packages/kit directory â€” do not edit it */
export const types = ${JSON.stringify(types, null, '  ')};
`.trim()
);
